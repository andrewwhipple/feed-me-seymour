{"ast":null,"code":"var _jsxFileName = \"/Users/andrewwhipple/Desktop/feed-me-seymour/client/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass FeedUrlForm extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleFeedSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Enter feed url:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.feedUrl,\n      onChange: this.props.handleFeedFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass FeedError extends React.Component {\n  render() {\n    if (this.props.errorMessage === '') {\n      return React.createElement(\"div\", {\n        className: \"no-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }) // use no-error to hide the div\n      ;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.errorMessage));\n    }\n  }\n\n}\n\nclass FeedBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedTitle: '',\n      feedUrl: '',\n      errorMessage: '',\n      isError: false\n    };\n    this.handleFeedSubmit = this.handleFeedSubmit.bind(this);\n    this.handleFeedFormChange = this.handleFeedFormChange.bind(this);\n  }\n\n  handleFeedSubmit(event) {\n    console.log(this.state.feedUrl);\n    event.preventDefault();\n    console.log(encodeURIComponent(this.state.feedUrl));\n    /*fetch('/express_backend').then((res) =>{\n      console.log(res.json());\n    }); */\n\n    fetch('/fetch_feed/' + encodeURIComponent(this.state.feedUrl), {\n      method: 'GET'\n    }).then(res => {\n      res.text().then(xmlTxt => {\n        console.log(xmlTxt);\n\n        if (res.ok) {\n          this.setState({\n            errorMessage: '',\n            isError: false\n          });\n        } else {\n          this.setState({\n            errorMessage: xmlTxt,\n            isError: true\n          });\n        }\n      });\n    }).catch(() => console.error('Error in fetching the RSS feed'));\n  }\n\n  handleFeedFormChange(event) {\n    this.setState({\n      feedUrl: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(FeedUrlForm, {\n      handleFeedSubmit: this.handleFeedSubmit,\n      handleFeedFormChange: this.handleFeedFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(FeedError, {\n      isError: this.state.isError,\n      errorMessage: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(FeedBuilder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewwhipple/Desktop/feed-me-seymour/client/src/App.js"],"names":["React","FeedUrlForm","Component","render","props","handleFeedSubmit","feedUrl","handleFeedFormChange","FeedError","errorMessage","FeedBuilder","constructor","state","feedTitle","isError","bind","event","console","log","preventDefault","encodeURIComponent","fetch","method","then","res","text","xmlTxt","ok","setState","catch","error","target","value","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\nclass FeedUrlForm extends React.Component {\n  \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.handleFeedSubmit}>\n        <label>\n          Enter feed url:\n          <input type=\"text\" value={this.props.feedUrl} onChange={this.props.handleFeedFormChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n  \n    );\n  }\n}\n\nclass FeedError extends React.Component {\n  render() {\n    if (this.props.errorMessage === '') {\n      return(\n          <div className=\"no-error\"></div> // use no-error to hide the div\n      );\n    } else {\n      return (\n        <div>\n          <p>{this.props.errorMessage}</p>\n        </div>\n      );\n    }\n  }\n}\n\nclass FeedBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedTitle: '',\n      feedUrl: '',\n      errorMessage: '',\n      isError: false,\n    }\n\n    this.handleFeedSubmit = this.handleFeedSubmit.bind(this);\n    this.handleFeedFormChange = this.handleFeedFormChange.bind(this);\n  };\n\n  handleFeedSubmit(event) {\n    console.log(this.state.feedUrl);\n    event.preventDefault();\n    console.log(encodeURIComponent(this.state.feedUrl));\n\n    /*fetch('/express_backend').then((res) =>{\n      console.log(res.json());\n    }); */\n    \n    fetch('/fetch_feed/' + encodeURIComponent(this.state.feedUrl), {\n      method: 'GET',\n    }).then((res) => {\n      res.text().then((xmlTxt) => {\n        console.log(xmlTxt);\n        if(res.ok) {\n          this.setState({\n            errorMessage: '',\n            isError: false,\n          });\n\n        } else {\n          this.setState({\n            errorMessage: xmlTxt,\n            isError: true,\n          });\n        }\n      })\n    }).catch(() => console.error('Error in fetching the RSS feed')) \n  } \n  \n  handleFeedFormChange(event) {\n    this.setState({feedUrl: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        <FeedUrlForm handleFeedSubmit={this.handleFeedSubmit} handleFeedFormChange={this.handleFeedFormChange}/>\n      \n        <FeedError isError={this.state.isError} errorMessage={this.state.errorMessage} />\n\n      </div> \n    );\n  }\n}\n\n\nfunction App() {\n  \n  \n  return (\n    <FeedBuilder />\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}