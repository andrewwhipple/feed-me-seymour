{"ast":null,"code":"var _jsxFileName = \"/Users/andrewwhipple/Desktop/feed-me-seymour/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass FeedUrlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedUrl: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.feedUrl);\n    event.preventDefault();\n    const DOMPARSER = new DOMParser().parseFromString.bind(new DOMParser());\n    fetch(this.state.feedUrl, {\n      mode: 'no-cors'\n    }).then(res => {\n      res.text().then(xmlTxt => {\n        console.log(\"meow\" + xmlTxt);\n        /* Parse the RSS Feed and display the content */\n\n        try {\n          let doc = DOMPARSER(xmlTxt, \"text/xml\");\n          let heading = document.createElement('h1');\n          heading.textContent = url.hostname;\n          frag.appendChild(heading);\n          doc.querySelectorAll('item').forEach(item => {\n            let temp = document.importNode(document.querySelector('template').content, true);\n            let i = item.querySelector.bind(item);\n            let t = temp.querySelector.bind(temp);\n            t('h2').textContent = !!i('title') ? i('title').textContent : '-';\n            t('a').textContent = t('a').href = !!i('link') ? i('link').textContent : '#';\n            t('p').innerHTML = !!i('description') ? i('description').textContent : '-';\n            t('h3').textContent = url.hostname;\n            frag.appendChild(temp);\n          });\n        } catch (e) {\n          console.error('Error in parsing the feed');\n        }\n        /*if(hasBegun) {\n          document.querySelector('output').textContent = ''; \n          hasBegun = false;\n        }\n        document.querySelector('output').appendChild(frag) */\n\n      });\n    }).catch(() => console.error('Error in fetching the RSS feed'));\n    /* fetch(this.state.feedUrl, {\n      mode: 'no-cors',\n    })\n    .then(function(response) {\n      return response.json().then(function(json) {\n        console.log(json);\n      });\n    });*/\n  }\n\n  handleChange(event) {\n    this.setState({\n      feedUrl: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Enter feed url:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.feedUrl,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(FeedUrlForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewwhipple/Desktop/feed-me-seymour/src/App.js"],"names":["React","FeedUrlForm","Component","constructor","props","state","feedUrl","handleChange","bind","handleSubmit","event","console","log","preventDefault","DOMPARSER","DOMParser","parseFromString","fetch","mode","then","res","text","xmlTxt","doc","heading","document","createElement","textContent","url","hostname","frag","appendChild","querySelectorAll","forEach","item","temp","importNode","querySelector","content","i","t","href","innerHTML","e","error","catch","setState","target","value","render","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass FeedUrlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedUrl: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.feedUrl);\n    event.preventDefault();\n\n    const DOMPARSER = new DOMParser().parseFromString.bind(new DOMParser());\n\n    fetch(this.state.feedUrl, {\n      mode: 'no-cors',\n    }).then((res) => {\n      res.text().then((xmlTxt) => {\n        console.log(\"meow\" + xmlTxt);\n        /* Parse the RSS Feed and display the content */\n        \n        try {\n          let doc = DOMPARSER(xmlTxt, \"text/xml\")\n          let heading = document.createElement('h1')\n          heading.textContent = url.hostname\n          frag.appendChild(heading)\n          doc.querySelectorAll('item').forEach((item) => {\n            let temp = document.importNode(document.querySelector('template').content, true);\n            let i = item.querySelector.bind(item)\n            let t = temp.querySelector.bind(temp)\n            t('h2').textContent = !!i('title') ? i('title').textContent : '-'\n            t('a').textContent = t('a').href = !!i('link') ? i('link').textContent : '#'\n            t('p').innerHTML = !!i('description') ? i('description').textContent : '-'\n            t('h3').textContent = url.hostname\n            frag.appendChild(temp)\n          })\n        } catch (e) {\n          console.error('Error in parsing the feed')\n        } \n        \n        /*if(hasBegun) {\n          document.querySelector('output').textContent = ''; \n          hasBegun = false;\n        }\n        document.querySelector('output').appendChild(frag) */\n      })\n    }).catch(() => console.error('Error in fetching the RSS feed'))\n\n\n\n    /* fetch(this.state.feedUrl, {\n      mode: 'no-cors',\n    })\n    .then(function(response) {\n      return response.json().then(function(json) {\n        console.log(json);\n      });\n    });*/\n  } \n  \n  handleChange(event) {\n    this.setState({feedUrl: event.target.value});\n  }\n\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n        <label>\n          Enter feed url:\n          <input type=\"text\" value={this.state.feedUrl} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n  \n    );\n  }\n}\n\n\nfunction App() {\n  return (\n    <FeedUrlForm />\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}