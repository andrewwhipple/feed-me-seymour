{"ast":null,"code":"var _jsxFileName = \"/Users/andrewwhipple/Desktop/feed-me-seymour/client/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass FeedUrlForm extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleFeedSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Enter feed url:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.feedUrl,\n      onChange: this.props.handleFeedFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass FeedError extends React.Component {\n  render() {\n    if (this.props.isError) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.errorMessage));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"no-show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }) // use no-error to hide the div\n      ;\n    }\n  }\n\n}\n\nclass FeedTitle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editable: false,\n      feedTitle: ''\n    };\n\n    try {\n      let feedTitle = this.props.feedJSON.rss.channel.title._text;\n      this.setState({\n        feedTitle: feedTitle\n      });\n    } catch (error) {\n      this.setState({\n        feedTitle: null\n      });\n    }\n\n    this.handleEditButtonClick = this.handleEditButtonClick.bind(this);\n    this.handleUpdateButtonClick = this.handleUpdateButtonClick.bind(this);\n  }\n\n  handleEditButtonClick(event) {\n    console.log(\"Clicked!\");\n    this.setState({\n      editable: true\n    });\n  }\n\n  handleUpdateButtonClick(event) {\n    event.preventDefault();\n    console.log(event); //var newJSON = JSON.parse(JSON.stringify(this.props.feedJSON));\n  }\n\n  render() {\n    if (this.state.feedTitle) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Title: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.feedTitle), this.state.editable ? React.createElement(\"form\", {\n        onSubmit: this.handleUpdateButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })) : React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleEditButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Edit\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"no-show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nclass FeedBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.defaultState = {\n      feedTitle: '',\n      feedUrl: '',\n      errorMessage: '',\n      isError: false,\n      feedJSON: {}\n    };\n    this.state = {\n      feedTitle: '',\n      feedUrl: '',\n      errorMessage: '',\n      isError: false,\n      feedJSON: {}\n    };\n    this.handleFeedSubmit = this.handleFeedSubmit.bind(this);\n    this.handleFeedFormChange = this.handleFeedFormChange.bind(this);\n    this.updateFeedJSON = this.updateFeedJSON.bind(this);\n  }\n\n  updateFeedJSON(newFeedJSON) {\n    this.setState({\n      feedJSON: newFeedJSON\n    });\n  }\n\n  handleFeedSubmit(event) {\n    event.preventDefault();\n    fetch('/fetch_feed/' + encodeURIComponent(this.state.feedUrl), {\n      method: 'GET'\n    }).then(res => {\n      res.text().then(xmlTxt => {\n        if (res.ok) {\n          this.setState(this.defaultState);\n          this.setState({\n            errorMessage: '',\n            isError: false,\n            feedJSON: JSON.parse(xmlTxt)\n          });\n        } else {\n          this.setState(this.defaultState);\n          this.setState({\n            errorMessage: xmlTxt,\n            isError: true\n          });\n        }\n      });\n    }).catch(() => console.error('Error in fetching the RSS feed'));\n  }\n\n  handleFeedFormChange(event) {\n    this.setState({\n      feedUrl: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(FeedUrlForm, {\n      handleFeedSubmit: this.handleFeedSubmit,\n      handleFeedFormChange: this.handleFeedFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(FeedError, {\n      isError: this.state.isError,\n      errorMessage: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(FeedTitle, {\n      feedJSON: this.state.feedJSON,\n      updateFeedJSON: this.updateFeedJSON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(FeedBuilder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewwhipple/Desktop/feed-me-seymour/client/src/App.js"],"names":["React","FeedUrlForm","Component","render","props","handleFeedSubmit","feedUrl","handleFeedFormChange","FeedError","isError","errorMessage","FeedTitle","constructor","state","editable","feedTitle","feedJSON","rss","channel","title","_text","setState","error","handleEditButtonClick","bind","handleUpdateButtonClick","event","console","log","preventDefault","FeedBuilder","defaultState","updateFeedJSON","newFeedJSON","fetch","encodeURIComponent","method","then","res","text","xmlTxt","ok","JSON","parse","catch","target","value","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\nclass FeedUrlForm extends React.Component {\n  \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.handleFeedSubmit}>\n        <label>\n          Enter feed url:\n          <input type=\"text\" value={this.props.feedUrl} onChange={this.props.handleFeedFormChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n  \n    );\n  }\n}\n\nclass FeedError extends React.Component {\n  render() {\n    if (this.props.isError) {\n      return (\n        <div>\n          <p>{this.props.errorMessage}</p>\n        </div>\n      );\n    } else {\n      return(\n        <div className=\"no-show\"></div> // use no-error to hide the div\n    );\n    }\n  }\n}\n\nclass FeedTitle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editable: false,\n      feedTitle: '',\n    }\n\n    try {\n      let feedTitle = this.props.feedJSON.rss.channel.title._text;\n      this.setState({feedTitle: feedTitle});\n    } catch (error) {\n      this.setState({feedTitle: null});\n    }\n\n    this.handleEditButtonClick = this.handleEditButtonClick.bind(this);\n    this.handleUpdateButtonClick = this.handleUpdateButtonClick.bind(this);\n  }\n  \n  handleEditButtonClick(event) {\n    console.log(\"Clicked!\");\n    this.setState({editable: true});\n  }\n\n  handleUpdateButtonClick(event) {\n    event.preventDefault();\n\n    console.log(event);\n    //var newJSON = JSON.parse(JSON.stringify(this.props.feedJSON));\n  }\n\n  render() {\n    if (this.state.feedTitle) {\n      return (\n        <div>\n          <p>Title: </p>\n          <p>{this.state.feedTitle}</p>\n          {this.state.editable ? (\n            <form onSubmit={this.handleUpdateButtonClick}>\n              <input type=\"text\"></input>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          ) : (\n            <button type=\"button\" onClick={this.handleEditButtonClick}>Edit</button>\n          )}\n          \n          \n        </div>\n      );\n    } else {\n      return (\n        <div className=\"no-show\"></div>\n      );\n    }\n  }\n}\n\nclass FeedBuilder extends React.Component {\n  defaultState = {\n    feedTitle: '',\n    feedUrl: '',\n    errorMessage: '',\n    isError: false,\n    feedJSON: {},\n  }\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      feedTitle: '',\n      feedUrl: '',\n      errorMessage: '',\n      isError: false,\n      feedJSON: {},\n    }\n\n    this.handleFeedSubmit = this.handleFeedSubmit.bind(this);\n    this.handleFeedFormChange = this.handleFeedFormChange.bind(this);\n    this.updateFeedJSON = this.updateFeedJSON.bind(this);\n  };\n\n  updateFeedJSON(newFeedJSON) {\n    this.setState({feedJSON: newFeedJSON});\n  }\n\n  handleFeedSubmit(event) {\n    event.preventDefault();\n    \n    fetch('/fetch_feed/' + encodeURIComponent(this.state.feedUrl), {\n      method: 'GET',\n    }).then((res) => {\n      res.text().then((xmlTxt) => {\n        if(res.ok) {\n          this.setState(this.defaultState);\n          this.setState({\n            errorMessage: '',\n            isError: false,\n            feedJSON: JSON.parse(xmlTxt),\n          });\n\n        } else {\n          this.setState(this.defaultState);\n          this.setState({\n            errorMessage: xmlTxt,\n            isError: true,\n          });\n        }\n      })\n    }).catch(() => console.error('Error in fetching the RSS feed')) \n  } \n  \n  handleFeedFormChange(event) {\n    this.setState({feedUrl: event.target.value});\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <FeedUrlForm handleFeedSubmit={this.handleFeedSubmit} handleFeedFormChange={this.handleFeedFormChange}/>\n      \n        <FeedError isError={this.state.isError} errorMessage={this.state.errorMessage} />\n\n        <FeedTitle feedJSON={this.state.feedJSON} updateFeedJSON={this.updateFeedJSON} />\n\n      </div> \n    );\n  }\n}\n\n\nfunction App() {\n  \n  \n  return (\n    <FeedBuilder />\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}