{"ast":null,"code":"var _jsxFileName = \"/Users/andrewwhipple/Desktop/feed-me-seymour/client/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass FeedUrlForm extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleFeedSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Enter feed url:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.feedUrl,\n      onChange: this.props.handleFeedFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass FeedError extends React.Component {\n  render() {\n    if (this.props.isError) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.errorMessage));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"no-show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }) // use no-error to hide the div\n      ;\n    }\n  }\n\n}\n\nclass FeedTitle extends React.Component {\n  render() {\n    try {\n      let feedTitle = this.props.feedJSON.rss.channel.title._text;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"feedTitle\"));\n    } catch (error) {\n      return React.createElement(\"div\", {\n        className: \"no-show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.feedTitle));\n  }\n\n}\n\nclass FeedBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedTitle: '',\n      feedUrl: '',\n      errorMessage: '',\n      isError: false,\n      feedJSON: {}\n    };\n    this.handleFeedSubmit = this.handleFeedSubmit.bind(this);\n    this.handleFeedFormChange = this.handleFeedFormChange.bind(this);\n  }\n\n  handleFeedSubmit(event) {\n    console.log(this.state.feedUrl);\n    event.preventDefault();\n    console.log(encodeURIComponent(this.state.feedUrl));\n    /*fetch('/express_backend').then((res) =>{\n      console.log(res.json());\n    }); */\n\n    fetch('/fetch_feed/' + encodeURIComponent(this.state.feedUrl), {\n      method: 'GET'\n    }).then(res => {\n      res.text().then(xmlTxt => {\n        if (res.ok) {\n          this.setState({\n            errorMessage: '',\n            isError: false,\n            feedJSON: xmlTxt\n          });\n          console.log(this.state.feedJSON);\n        } else {\n          this.setState({\n            errorMessage: xmlTxt,\n            isError: true\n          });\n        }\n      });\n    }).catch(() => console.error('Error in fetching the RSS feed'));\n  }\n\n  handleFeedFormChange(event) {\n    this.setState({\n      feedUrl: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(FeedUrlForm, {\n      handleFeedSubmit: this.handleFeedSubmit,\n      handleFeedFormChange: this.handleFeedFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(FeedError, {\n      isError: this.state.isError,\n      errorMessage: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(FeedTitle, {\n      feedJSON: this.state.feedJSON,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(FeedBuilder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewwhipple/Desktop/feed-me-seymour/client/src/App.js"],"names":["React","FeedUrlForm","Component","render","props","handleFeedSubmit","feedUrl","handleFeedFormChange","FeedError","isError","errorMessage","FeedTitle","feedTitle","feedJSON","rss","channel","title","_text","error","FeedBuilder","constructor","state","bind","event","console","log","preventDefault","encodeURIComponent","fetch","method","then","res","text","xmlTxt","ok","setState","catch","target","value","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAIA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAExCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,OAArC;AAA8C,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,oBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,EAKA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADF,CADF;AAYD;;AAfuC;;AAkB1C,MAAMC,SAAN,SAAwBR,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWK,OAAf,EAAwB;AACtB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKL,KAAL,CAAWM,YAAf,CADF,CADF;AAKD,KAND,MAMO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CACkC;AADlC;AAGD;AACF;;AAbqC;;AAgBxC,MAAMC,SAAN,SAAwBX,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,QAAI;AACF,UAAIS,SAAS,GAAG,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,GAApB,CAAwBC,OAAxB,CAAgCC,KAAhC,CAAsCC,KAAtD;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAMD,KARD,CAQE,OAAOC,KAAP,EAAc;AACd,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AAGD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKN,SAAT,CADF,CADF;AAKD;;AAtBqC;;AAyBxC,MAAMO,WAAN,SAA0BnB,KAAK,CAACE,SAAhC,CAA0C;AACxCkB,EAAAA,WAAW,CAAChB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKiB,KAAL,GAAa;AACXT,MAAAA,SAAS,EAAE,EADA;AAEXN,MAAAA,OAAO,EAAE,EAFE;AAGXI,MAAAA,YAAY,EAAE,EAHH;AAIXD,MAAAA,OAAO,EAAE,KAJE;AAKXI,MAAAA,QAAQ,EAAE;AALC,KAAb;AAQA,SAAKR,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBiB,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKf,oBAAL,GAA4B,KAAKA,oBAAL,CAA0Be,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAIDjB,EAAAA,gBAAgB,CAACkB,KAAD,EAAQ;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWf,OAAvB;AACAiB,IAAAA,KAAK,CAACG,cAAN;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,kBAAkB,CAAC,KAAKN,KAAL,CAAWf,OAAZ,CAA9B;AAEA;;;;AAIAsB,IAAAA,KAAK,CAAC,iBAAiBD,kBAAkB,CAAC,KAAKN,KAAL,CAAWf,OAAZ,CAApC,EAA0D;AAC7DuB,MAAAA,MAAM,EAAE;AADqD,KAA1D,CAAL,CAEGC,IAFH,CAESC,GAAD,IAAS;AACfA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBG,MAAD,IAAY;AAC1B,YAAGF,GAAG,CAACG,EAAP,EAAW;AACT,eAAKC,QAAL,CAAc;AACZzB,YAAAA,YAAY,EAAE,EADF;AAEZD,YAAAA,OAAO,EAAE,KAFG;AAGZI,YAAAA,QAAQ,EAAEoB;AAHE,WAAd;AAKAT,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWR,QAAvB;AAED,SARD,MAQO;AACL,eAAKsB,QAAL,CAAc;AACZzB,YAAAA,YAAY,EAAEuB,MADF;AAEZxB,YAAAA,OAAO,EAAE;AAFG,WAAd;AAID;AACF,OAfD;AAgBD,KAnBD,EAmBG2B,KAnBH,CAmBS,MAAMZ,OAAO,CAACN,KAAR,CAAc,gCAAd,CAnBf;AAoBD;;AAEDX,EAAAA,oBAAoB,CAACgB,KAAD,EAAQ;AAC1B,SAAKY,QAAL,CAAc;AAAC7B,MAAAA,OAAO,EAAEiB,KAAK,CAACc,MAAN,CAAaC;AAAvB,KAAd;AACD;;AAEDnC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,gBAAgB,EAAE,KAAKE,gBAApC;AAAsD,MAAA,oBAAoB,EAAE,KAAKE,oBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,KAAKc,KAAL,CAAWZ,OAA/B;AAAwC,MAAA,YAAY,EAAE,KAAKY,KAAL,CAAWX,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWR,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAUD;;AA/DuC;;AAmE1C,SAAS0B,GAAT,GAAe;AAGb,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\nclass FeedUrlForm extends React.Component {\n  \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.handleFeedSubmit}>\n        <label>\n          Enter feed url:\n          <input type=\"text\" value={this.props.feedUrl} onChange={this.props.handleFeedFormChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n  \n    );\n  }\n}\n\nclass FeedError extends React.Component {\n  render() {\n    if (this.props.isError) {\n      return (\n        <div>\n          <p>{this.props.errorMessage}</p>\n        </div>\n      );\n    } else {\n      return(\n        <div className=\"no-show\"></div> // use no-error to hide the div\n    );\n    }\n  }\n}\n\nclass FeedTitle extends React.Component {\n  render() {\n    try {\n      let feedTitle = this.props.feedJSON.rss.channel.title._text;\n      return (\n        <div>\n          <p>feedTitle</p>\n        </div>\n      );\n\n    } catch (error) {\n      return (\n        <div className=\"no-show\"></div>\n      );\n    }\n    \n    \n    return (\n      <div>\n        <p>{this.feedTitle}</p>\n      </div>\n    );\n  }\n}\n\nclass FeedBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedTitle: '',\n      feedUrl: '',\n      errorMessage: '',\n      isError: false,\n      feedJSON: {},\n    }\n\n    this.handleFeedSubmit = this.handleFeedSubmit.bind(this);\n    this.handleFeedFormChange = this.handleFeedFormChange.bind(this);\n  };\n\n \n\n  handleFeedSubmit(event) {\n    console.log(this.state.feedUrl);\n    event.preventDefault();\n    console.log(encodeURIComponent(this.state.feedUrl));\n\n    /*fetch('/express_backend').then((res) =>{\n      console.log(res.json());\n    }); */\n    \n    fetch('/fetch_feed/' + encodeURIComponent(this.state.feedUrl), {\n      method: 'GET',\n    }).then((res) => {\n      res.text().then((xmlTxt) => {\n        if(res.ok) {\n          this.setState({\n            errorMessage: '',\n            isError: false,\n            feedJSON: xmlTxt,\n          });\n          console.log(this.state.feedJSON);\n\n        } else {\n          this.setState({\n            errorMessage: xmlTxt,\n            isError: true,\n          });\n        }\n      })\n    }).catch(() => console.error('Error in fetching the RSS feed')) \n  } \n  \n  handleFeedFormChange(event) {\n    this.setState({feedUrl: event.target.value});\n  }\n\n  render() {\n    return (\n      <div>\n        <FeedUrlForm handleFeedSubmit={this.handleFeedSubmit} handleFeedFormChange={this.handleFeedFormChange}/>\n      \n        <FeedError isError={this.state.isError} errorMessage={this.state.errorMessage} />\n\n        <FeedTitle feedJSON={this.state.feedJSON} />\n\n      </div> \n    );\n  }\n}\n\n\nfunction App() {\n  \n  \n  return (\n    <FeedBuilder />\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}